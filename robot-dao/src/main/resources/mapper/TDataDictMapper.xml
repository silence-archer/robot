<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.silence.robot.mapper.TDataDictMapper">
  <resultMap id="BaseResultMap" type="com.silence.robot.model.TDataDict">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="enum_name" jdbcType="VARCHAR" property="enumName" />
    <result column="enum_desc" jdbcType="VARCHAR" property="enumDesc" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, `desc`, enum_name, enum_desc, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_data_dict
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_data_dict
    <if test="name != null">
      where name = #{name,jdbcType=VARCHAR}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_data_dict
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.silence.robot.model.TDataDict">
    insert into t_data_dict (id, `name`, `desc`, 
      enum_name, enum_desc, remark
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{enumName,jdbcType=VARCHAR}, #{enumDesc,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.silence.robot.model.TDataDict">
    insert into t_data_dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="enumName != null">
        enum_name,
      </if>
      <if test="enumDesc != null">
        enum_desc,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="enumName != null">
        #{enumName,jdbcType=VARCHAR},
      </if>
      <if test="enumDesc != null">
        #{enumDesc,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <insert id="insertAndBatch">
      insert into t_data_dict (id, `name`, `desc`,
                               enum_name, enum_desc, remark
      )
      values
      <foreach collection="records" item="item" separator="," index="index">
             (#{item.id,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.desc,jdbcType=VARCHAR},
              #{item.enumName,jdbcType=VARCHAR}, #{item.enumDesc,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}
             )
      </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.silence.robot.model.TDataDict">
    update t_data_dict
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="enumName != null">
        enum_name = #{enumName,jdbcType=VARCHAR},
      </if>
      <if test="enumDesc != null">
        enum_desc = #{enumDesc,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.silence.robot.model.TDataDict">
    update t_data_dict
    set `name` = #{name,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      enum_name = #{enumName,jdbcType=VARCHAR},
      enum_desc = #{enumDesc,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>