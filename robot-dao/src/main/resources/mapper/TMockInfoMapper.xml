<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.silence.robot.mapper.TMockInfoMapper">
  <resultMap id="BaseResultMap" type="com.silence.robot.model.TMockInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="MOCK_URL" jdbcType="VARCHAR" property="mockUrl" />
    <result column="MOCK_NAME" jdbcType="VARCHAR" property="mockName" />
    <result column="MOCK_MODULE" jdbcType="VARCHAR" property="mockModule" />
    <result column="MOCK_INPUT" jdbcType="VARCHAR" property="mockInput" />
    <result column="MOCK_OUTPUT" jdbcType="VARCHAR" property="mockOutput" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_mock_info
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.silence.robot.model.TMockInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_mock_info (ID, MOCK_URL, MOCK_NAME,
    MOCK_MODULE, MOCK_INPUT, MOCK_OUTPUT, CREATE_TIME,
      CREATE_USER, UPDATE_TIME, UPDATE_USER
      )
    values (#{id,jdbcType=VARCHAR}, #{mockUrl,jdbcType=VARCHAR}, #{mockName,jdbcType=VARCHAR},
      #{mockModule,jdbcType=VARCHAR}, #{mockInput,jdbcType=VARCHAR}, #{mockOutput,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.silence.robot.model.TMockInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_mock_info
    set MOCK_URL = #{mockUrl,jdbcType=VARCHAR},
    MOCK_NAME = #{mockName,jdbcType=VARCHAR},
    MOCK_MODULE = #{mockModule,jdbcType=VARCHAR},
    MOCK_INPUT = #{mockInput,jdbcType=VARCHAR},
    MOCK_OUTPUT = #{mockOutput,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select ID, MOCK_URL, MOCK_NAME, MOCK_MODULE, MOCK_INPUT, MOCK_OUTPUT, CREATE_TIME, CREATE_USER, UPDATE_TIME,
    UPDATE_USER
    from t_mock_info
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select ID, MOCK_URL, MOCK_NAME, MOCK_MODULE, MOCK_INPUT, MOCK_OUTPUT, CREATE_TIME, CREATE_USER, UPDATE_TIME,
    UPDATE_USER
    from t_mock_info
  </select>
  <select id="selectByMockUrlAndModule" resultMap="BaseResultMap">
    select ID, MOCK_URL, MOCK_NAME, MOCK_MODULE, MOCK_INPUT, MOCK_OUTPUT, CREATE_TIME, CREATE_USER, UPDATE_TIME,
           UPDATE_USER
    from t_mock_info
    where MOCK_URL = #{mockUrl,jdbcType=VARCHAR} AND MOCK_MODULE = #{mockModule,jdbcType=VARCHAR}
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap">
      select ID, MOCK_URL, MOCK_NAME, MOCK_MODULE, MOCK_INPUT, MOCK_OUTPUT, CREATE_TIME, CREATE_USER, UPDATE_TIME,
             UPDATE_USER
      from t_mock_info
      <where>
        <if test="mockModule != null and mockModule != '' ">
          AND MOCK_MODULE = #{mockModule,jdbcType=VARCHAR}
        </if>
        <if test="mockInput != null and mockInput != '' ">
          AND MOCK_INPUT like '%' || #{mockInput,jdbcType=VARCHAR} || '%'
        </if>
        <if test="mockUrl != null and mockUrl != '' ">
          AND MOCK_URL = #{mockUrl,jdbcType=VARCHAR}
        </if>
        <if test="mockName != null and mockName != '' ">
          AND MOCK_NAME like '%' || #{mockName,jdbcType=VARCHAR} || '%'
        </if>
      </where>
  </select>
    <select id="selectByQueryDto" parameterType="com.silence.robot.model.TMockInfo" resultMap="BaseResultMap">
      select ID, MOCK_URL, MOCK_NAME, MOCK_MODULE, MOCK_INPUT, MOCK_OUTPUT, CREATE_TIME, CREATE_USER, UPDATE_TIME,
      UPDATE_USER
      from t_mock_info
      <where>
        <if test="mockModule != null and mockModule != '' ">
          AND MOCK_MODULE = #{mockModule,jdbcType=VARCHAR}
        </if>
        <if test="mockInput != null and mockInput != '' ">
          AND MOCK_INPUT = #{mockInput,jdbcType=VARCHAR}
        </if>
        <if test="mockUrl != null and mockUrl != '' ">
          AND MOCK_URL = #{mockUrl,jdbcType=VARCHAR}
        </if>
        <if test="mockName != null and mockName != '' ">
          AND MOCK_NAME = #{mockName,jdbcType=VARCHAR}
        </if>
        <if test="mockOutput != null and mockOutput != '' ">
          AND MOCK_OUTPUT = #{mockOutput,jdbcType=VARCHAR}
        </if>
        <if test="mockOutput != null and mockOutput != '' ">
          AND MOCK_OUTPUT = #{mockOutput,jdbcType=VARCHAR}
        </if>
        <if test="createTime != null">
          AND CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="createUser != null and createUser != '' ">
          AND CREATE_USER = #{createUser,jdbcType=VARCHAR}
        </if>
        <if test="updateTime != null">
          AND UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="updateUser != null and updateUser != '' ">
          AND UPDATE_USER = #{updateUser,jdbcType=VARCHAR}
        </if>
      </where>
    </select>


</mapper>